{"ast":null,"code":"var _jsxFileName = \"/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Modal from './Modal';\nimport axios from \"axios\";\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login({\n  loggedIn,\n  setLoggedIn,\n  setOrder,\n  loginData,\n  setLoginData\n}) {\n  _s();\n\n  const [emailInput, setEmailInput] = React.useState();\n  const [passwordInput, setPasswordInput] = React.useState();\n  const [usersData, setUsersData] = React.useState();\n  const [showModal, setShowModal] = React.useState(false);\n  const [modalMessage, setModalMessage] = React.useState();\n  let styles = {\n    fontSize: '20px'\n  };\n\n  if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Logged in as \", loginData.first_name, \" \", loginData.last_name, \" | \", loginData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loginData.admin ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"ADMIN USER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        onClick: () => {\n          setEmailInput('');\n          setPasswordInput('');\n          setOrder([]);\n          setLoggedIn(false);\n          setLoginData({});\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"email address\",\n          onChange: event => {\n            setEmailInput(event.target.value);\n          },\n          value: emailInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          // type=\"password\"\n          placeholder: \"password\",\n          onChange: event => {\n            setPasswordInput(event.target.value);\n          },\n          value: passwordInput // value={hidePassword(passwordInput)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: async () => {\n            console.log('email: ', emailInput);\n            axios.get(`http://localhost:3100/users`).then(response => {\n              console.log(response);\n              setUsersData(response.data);\n\n              if (findCredentials(response.data, emailInput, passwordInput) !== '') {\n                let index = findCredentials(response.data, emailInput, passwordInput);\n                let credentialsObj = {};\n                credentialsObj.email = emailInput;\n                credentialsObj.user_id = response.data[index].user_id;\n                credentialsObj.first_name = response.data[index].first_name;\n                credentialsObj.last_name = response.data[index].last_name;\n                credentialsObj.admin = response.data[index].admin;\n                setLoginData(credentialsObj);\n                setLoggedIn(true);\n              } else {\n                setModalMessage('Invalid credentials');\n                setShowModal(true);\n              }\n            }).catch(err => {\n              console.log(err);\n            });\n          },\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          toggle: showModal,\n          message: modalMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Login, \"dGGeLZ9N4qP2SE4MCkBnt+OiSN8=\");\n\n_c = Login;\n\nfunction findCredentials(data, emailInput, passwordInput) {\n  let result = data.map(datum => matchedCredentials(datum, emailInput, passwordInput));\n\n  if (result.includes(true)) {\n    let index = result.indexOf(true);\n    return index;\n  } else {\n    return '';\n  }\n}\n\nfunction matchedCredentials(datum, emailInput, passwordInput) {\n  if (datum.email === emailInput && datum.password === passwordInput) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction hidePassword(password) {\n  if (password) {\n    if (password.length > 0) {\n      let wordArray = password.split('');\n      let starred = wordArray.map(x => '*');\n      return starred.join('');\n    }\n  } else {\n    return '';\n  }\n}\n\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/Login.js"],"names":["React","Modal","axios","Button","Login","loggedIn","setLoggedIn","setOrder","loginData","setLoginData","emailInput","setEmailInput","useState","passwordInput","setPasswordInput","usersData","setUsersData","showModal","setShowModal","modalMessage","setModalMessage","styles","fontSize","first_name","last_name","email","admin","event","target","value","console","log","get","then","response","data","findCredentials","index","credentialsObj","user_id","catch","err","result","map","datum","matchedCredentials","includes","indexOf","password","hidePassword","length","wordArray","split","starred","x","join"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from './Modal';\nimport axios from \"axios\";\n\nimport Button from 'react-bootstrap/Button';\n\nfunction Login({ loggedIn, setLoggedIn, setOrder, loginData, setLoginData }) {\n    const [emailInput, setEmailInput] = React.useState();\n    const [passwordInput, setPasswordInput] = React.useState();\n    const [usersData, setUsersData] = React.useState();\n    const [showModal, setShowModal] = React.useState(false);\n    const [modalMessage, setModalMessage] = React.useState();\n\n\n    let styles = {\n        fontSize: '20px'\n    };\n    \n    if (loggedIn) {\n        return (\n            <div style={styles}>\n                <p>Logged in as {loginData.first_name} {loginData.last_name} | {loginData.email}</p>\n                <div>\n                    {\n                        (loginData.admin)\n                        ? <h3>ADMIN USER</h3>\n                        : <></>   \n                    }\n                </div>\n                <Button\n                    variant=\"light\"\n                    onClick={() => {\n                        setEmailInput('');\n                        setPasswordInput('');\n                        setOrder([]);\n                        setLoggedIn(false);\n                        setLoginData({}); \n                    }}\n                    >Log out\n                </Button>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h3>Login:</h3>\n                <div class=\"form\">\n                    <input \n                        placeholder=\"email address\"\n                        onChange={(event) => {\n                            setEmailInput(event.target.value);\n                        }}\n                        \n                        value={emailInput}\n                    />\n\n                    <input \n                        // type=\"password\"\n                        placeholder=\"password\"\n                        onChange={(event) => {\n                            setPasswordInput(event.target.value);\n                        }}\n                        \n                        value={passwordInput}\n                        // value={hidePassword(passwordInput)}\n                    />\n\n                    <Button\n                        variant=\"light\"\n                        onClick={async () => {\n                            console.log('email: ', emailInput);\n                            axios\n                            .get(\n                                `http://localhost:3100/users`, \n                            )\n                            .then(response => {\n                                console.log(response)\n                                setUsersData(response.data);\n                                if (findCredentials(response.data, emailInput, passwordInput) !== '') {\n                                    let index = findCredentials(response.data, emailInput, passwordInput);\n                                    let credentialsObj = {};\n                                    credentialsObj.email = emailInput;\n                                    credentialsObj.user_id = response.data[index].user_id;\n                                    credentialsObj.first_name = response.data[index].first_name;\n                                    credentialsObj.last_name = response.data[index].last_name;\n                                    credentialsObj.admin = response.data[index].admin;\n                                    setLoginData(credentialsObj);\n                                    setLoggedIn(true);\n                                } else {\n                                    setModalMessage('Invalid credentials');\n                                    setShowModal(true);\n                                }\n                            })\n                            .catch(err => {\n                                console.log(err)\n                            });\n                        }}\n                        >Log in\n                    </Button>\n                    <Modal toggle={showModal} message={modalMessage} />\n                </div>\n            </div>\n        ); \n    }\n    \n   \n}\n\nfunction findCredentials(data, emailInput, passwordInput) {\n    let result = data.map(datum => matchedCredentials(datum, emailInput, passwordInput));\n    if (result.includes(true)) {\n        let index = result.indexOf(true);\n        return index;\n    } else {\n        return '';\n    }\n}\n\nfunction matchedCredentials(datum, emailInput, passwordInput) {\n    if (datum.email === emailInput && datum.password === passwordInput) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction hidePassword(password) {\n    if (password) {\n        if (password.length > 0) {\n            let wordArray = password.split('');\n            let starred = wordArray.map(x => '*');\n            return starred.join('');\n        } \n    } else {\n        return '';\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}