{"ast":null,"code":"var _jsxFileName = \"/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/BasketItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Modal from './Modal';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BasketItem({\n  name,\n  price,\n  quantity,\n  setOrder,\n  index,\n  order\n}) {\n  _s();\n\n  const [showModal, setShowModal] = React.useState(false);\n  const [modalMessage, setModalMessage] = React.useState();\n  let btnStyle = {\n    fontSize: '20px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"basket-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"menu-box-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xA3\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"menu-box-2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"quantity: \", quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"menu-box-3\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: () => {\n            let newQuantity = quantity + 1;\n\n            if (newQuantity < 6) {\n              let changedItem = order[index];\n              changedItem.quantity = newQuantity;\n              const updatedItem = changedItem;\n              let changedOrder = order;\n              changedOrder[index] = updatedItem; //console.log('changedOrder:', changedOrder)\n\n              const updatedOrder = changedOrder;\n              setOrder([...updatedOrder]);\n            } else {\n              //console.log('only up to 5 quanities allowed');\n              setModalMessage('Only up to 5 quanities allowed');\n              setShowModal(true);\n            }\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: () => {\n            let newQuantity = quantity - 1;\n\n            if (newQuantity > 0) {\n              let changedItem = order[index];\n              changedItem.quantity = newQuantity;\n              const updatedItem = changedItem;\n              let changedOrder = order;\n              changedOrder[index] = updatedItem;\n              const updatedOrder = changedOrder;\n              setOrder([...updatedOrder]);\n            } else {\n              let currentOrder = order;\n\n              if (index > -1) {\n                currentOrder.splice(index, 1);\n              }\n\n              const updatedOrder = currentOrder;\n              setOrder([...updatedOrder]);\n            }\n          },\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      toggle: showModal,\n      message: modalMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BasketItem, \"SE9s/rSkp+fPz0bLOdt90/wUXzM=\");\n\n_c = BasketItem;\nexport default BasketItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasketItem\");","map":{"version":3,"sources":["/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/BasketItem.js"],"names":["React","Modal","Button","BasketItem","name","price","quantity","setOrder","index","order","showModal","setShowModal","useState","modalMessage","setModalMessage","btnStyle","fontSize","newQuantity","changedItem","updatedItem","changedOrder","updatedOrder","currentOrder","splice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from './Modal';\n\nimport Button from 'react-bootstrap/Button';\n\nfunction BasketItem({ name, price, quantity, setOrder, index, order }) {\n    const [showModal, setShowModal] = React.useState(false);\n    const [modalMessage, setModalMessage] = React.useState();\n\n    let btnStyle = {\n        fontSize: '20px'\n    };\n    \n\n    return (\n    <div class=\"basket-item\">\n\n        <div class=\"container-2\">\n            <div class=\"menu-box-1\">\n                <p>{name}</p>\n                <p>Â£{price}</p>\n            </div>\n            <div class=\"menu-box-2\">\n                <p>quantity: {quantity}</p>\n            </div>\n            <div class=\"menu-box-3\">\n                <Button\n                    variant=\"dark\"\n                    onClick={() => {\n                        let newQuantity = quantity + 1;\n                        if (newQuantity < 6) {\n                            let changedItem = order[index];\n                            changedItem.quantity = newQuantity;\n                            const updatedItem = changedItem;\n\n                            let changedOrder = order;\n                            changedOrder[index] = updatedItem;\n                            //console.log('changedOrder:', changedOrder)\n\n                            const updatedOrder = changedOrder;\n                            setOrder([...updatedOrder]);\n                        } else {\n                            //console.log('only up to 5 quanities allowed');\n                            setModalMessage('Only up to 5 quanities allowed');\n                            setShowModal(true);\n                        }\n\n                    }}\n                    >+\n                </Button>\n\n                <Button\n                    variant=\"dark\"\n                    onClick={() => {\n                        let newQuantity = quantity - 1;\n                        if (newQuantity > 0) {\n                            let changedItem = order[index];\n                            changedItem.quantity = newQuantity;\n                            const updatedItem = changedItem;\n\n                            let changedOrder = order;\n                            changedOrder[index] = updatedItem;\n\n                            const updatedOrder = changedOrder;\n                            setOrder([...updatedOrder]);\n                        } else {\n                            let currentOrder = order;\n                \n                            if (index > -1) {\n                                currentOrder.splice(index, 1);\n                            }\n                            const updatedOrder = currentOrder;\n                            setOrder([...updatedOrder]);\n                        }\n                        \n                    }}\n                    >-\n                </Button>\n            </div>\n        </div>\n\n\n        <Modal toggle={showModal} message={modalMessage} />\n\n    </div>\n    ); \n   \n  }\n\nexport default BasketItem;"]},"metadata":{},"sourceType":"module"}