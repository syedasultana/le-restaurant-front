{"ast":null,"code":"var _jsxFileName = \"/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/BasketItem.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BasketItem({\n  name,\n  price,\n  quantity,\n  setOrder,\n  index,\n  order\n}) {\n  // React.useEffect(() => {\n  //     if (order[index].quantity > 1) {\n  //         console.log('quantity incremented');\n  //     }\n  // }, [order])\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"quantity: \", quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let newQuantity = quantity + 1;\n\n        if (newQuantity < 6) {\n          let changedItem = order[index];\n          changedItem.quantity = newQuantity;\n          const updatedItem = changedItem;\n          let changedOrder = order;\n          changedOrder[index] = updatedItem; //console.log('changedOrder:', changedOrder)\n\n          const updatedOrder = changedOrder;\n          setOrder([...updatedOrder]);\n        } else {\n          console.log('only up to 5 quanities allowed'); //show jsx message\n        } //MAX: 5\n\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let newQuantity = quantity - 1;\n\n        if (newQuantity > 0) {\n          let changedItem = order[index];\n          changedItem.quantity = newQuantity;\n          const updatedItem = changedItem;\n          let changedOrder = order;\n          changedOrder[index] = updatedItem; //console.log('changedOrder:', changedOrder)\n\n          const updatedOrder = changedOrder;\n          setOrder([...updatedOrder]);\n        } else {\n          let currentOrder = order; // let array = [3, 5, 2]\n          // const index = array.indexOf(5);\n\n          if (index > -1) {\n            currentOrder.splice(index, 1);\n          }\n\n          console.log('currentOrder', currentOrder);\n        } //MIN: 0\n\n      },\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = BasketItem;\nexport default BasketItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasketItem\");","map":{"version":3,"sources":["/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/BasketItem.js"],"names":["React","BasketItem","name","price","quantity","setOrder","index","order","newQuantity","changedItem","updatedItem","changedOrder","updatedOrder","console","log","currentOrder","splice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA;AAA1C,CAApB,EAAuE;AAEnE;AACA;AACA;AACA;AACA;AAEA,sBACA;AAAA,4BACI;AAAA,gBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,+BAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AACI,MAAA,OAAO,EAAE,MAAM;AACX,YAAII,WAAW,GAAGJ,QAAQ,GAAG,CAA7B;;AACA,YAAII,WAAW,GAAG,CAAlB,EAAqB;AACjB,cAAIC,WAAW,GAAGF,KAAK,CAACD,KAAD,CAAvB;AACAG,UAAAA,WAAW,CAACL,QAAZ,GAAuBI,WAAvB;AACA,gBAAME,WAAW,GAAGD,WAApB;AAEA,cAAIE,YAAY,GAAGJ,KAAnB;AACAI,UAAAA,YAAY,CAACL,KAAD,CAAZ,GAAsBI,WAAtB,CANiB,CAOjB;;AAEA,gBAAME,YAAY,GAAGD,YAArB;AACAN,UAAAA,QAAQ,CAAC,CAAC,GAAGO,YAAJ,CAAD,CAAR;AACH,SAXD,MAWO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADG,CAEH;AACH,SAhBU,CAmBX;;AACH,OArBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eA8BI;AACI,MAAA,OAAO,EAAE,MAAM;AACX,YAAIN,WAAW,GAAGJ,QAAQ,GAAG,CAA7B;;AACA,YAAII,WAAW,GAAG,CAAlB,EAAqB;AACjB,cAAIC,WAAW,GAAGF,KAAK,CAACD,KAAD,CAAvB;AACAG,UAAAA,WAAW,CAACL,QAAZ,GAAuBI,WAAvB;AACA,gBAAME,WAAW,GAAGD,WAApB;AAEA,cAAIE,YAAY,GAAGJ,KAAnB;AACAI,UAAAA,YAAY,CAACL,KAAD,CAAZ,GAAsBI,WAAtB,CANiB,CAOjB;;AAEA,gBAAME,YAAY,GAAGD,YAArB;AACAN,UAAAA,QAAQ,CAAC,CAAC,GAAGO,YAAJ,CAAD,CAAR;AACH,SAXD,MAWO;AACH,cAAIG,YAAY,GAAGR,KAAnB,CADG,CAGH;AACA;;AACA,cAAID,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZS,YAAAA,YAAY,CAACC,MAAb,CAAoBV,KAApB,EAA2B,CAA3B;AACH;;AACDO,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,YAA5B;AACH,SAtBU,CAyBX;;AACH,OA3BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAiED;;KAzEMd,U;AA2ET,eAAeA,UAAf","sourcesContent":["import React from 'react';\n\n\nfunction BasketItem({ name, price, quantity, setOrder, index, order }) {\n\n    // React.useEffect(() => {\n    //     if (order[index].quantity > 1) {\n    //         console.log('quantity incremented');\n    //     }\n    // }, [order])\n\n    return (\n    <div>\n        <p>{name}</p>\n        <p>{price}</p>\n        <p>quantity: {quantity}</p>\n    \n        <button\n            onClick={() => {\n                let newQuantity = quantity + 1;\n                if (newQuantity < 6) {\n                    let changedItem = order[index];\n                    changedItem.quantity = newQuantity;\n                    const updatedItem = changedItem;\n\n                    let changedOrder = order;\n                    changedOrder[index] = updatedItem;\n                    //console.log('changedOrder:', changedOrder)\n\n                    const updatedOrder = changedOrder;\n                    setOrder([...updatedOrder]);\n                } else {\n                    console.log('only up to 5 quanities allowed');\n                    //show jsx message\n                }\n                \n\n                //MAX: 5\n            }}\n            >+\n        </button>\n\n        <button\n            onClick={() => {\n                let newQuantity = quantity - 1;\n                if (newQuantity > 0) {\n                    let changedItem = order[index];\n                    changedItem.quantity = newQuantity;\n                    const updatedItem = changedItem;\n\n                    let changedOrder = order;\n                    changedOrder[index] = updatedItem;\n                    //console.log('changedOrder:', changedOrder)\n\n                    const updatedOrder = changedOrder;\n                    setOrder([...updatedOrder]);\n                } else {\n                    let currentOrder = order;\n                    \n                    // let array = [3, 5, 2]\n                    // const index = array.indexOf(5);\n                    if (index > -1) {\n                        currentOrder.splice(index, 1);\n                    }\n                    console.log('currentOrder', currentOrder); \n                }\n                \n\n                //MIN: 0\n            }}\n            >-\n        </button>\n\n    </div>\n    ); \n   \n  }\n\nexport default BasketItem;"]},"metadata":{},"sourceType":"module"}