{"ast":null,"code":"var _jsxFileName = \"/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/BookTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DatePicker from './DatePicker';\nimport TimePicker from './TimePicker';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookTable({\n  loggedIn,\n  loginData\n}) {\n  _s();\n\n  const [chosenDate, setChosenDate] = React.useState();\n  const [chosenTime, setChosenTime] = React.useState();\n  const [seatingNo, setSeatingNo] = React.useState();\n  const [existingBookings, setExistingBookings] = React.useState([]); //for user\n\n  const [allBookings, setAllBookings] = React.useState([]); //for admin\n\n  if (loggedIn) {\n    if (loginData.admin) {\n      //axios request\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Table Bookings Admin View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    } else {\n      //IF BOOKINGS ALREADY EXIST THEN DISPLAY THEM HERE, USING TERNARY OPERATOR\n      //do the axios call, if found then populate existingBookings \n      //use ternary operator to display bookings by checking if existingBookings is a populated or empty array\n      //getUsersBookings(setExistingBookings, loginData.user_id);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Book Table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              chosenDate: chosenDate,\n              setChosenDate: setChosenDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n              chosenTime: chosenTime,\n              setChosenTime: setChosenTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter your seating number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"e.g 5\",\n              onChange: event => {\n                setSeatingNo(event.target.value);\n              },\n              value: seatingNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleSubmit(chosenDate, chosenTime, seatingNo, loginData.user_id, setChosenDate, setChosenTime, setSeatingNo);\n            },\n            children: \"BOOK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please log in to book a table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(BookTable, \"Mi9K5syPK94Li8TKMr741cOf/FE=\");\n\n_c = BookTable;\n\nasync function getUsersBookings(setExistingBookings, user_id) {\n  const response = await axios.get(`http://localhost:3100/user-bookings/`, {\n    params: {\n      user_id: user_id\n    }\n  }).then(response => {\n    console.log(response);\n    setExistingBookings(response.data);\n  });\n}\n\nasync function handleSubmit(chosenDate, chosenTime, seatingNo, userId, setChosenDate, setChosenTime, setSeatingNo) {\n  //console.log('POST Request', chosenDate, chosenTime, seatingNo, userId);\n  const response = await axios.post(`http://localhost:3100/booking?user_id=${userId}&date=${chosenDate}&time=${chosenTime}&seating_no=${seatingNo}`).then(response => {\n    console.log(response); //reset form\n\n    setChosenDate('no date');\n    setChosenTime('no time');\n    setSeatingNo(undefined);\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nexport default BookTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookTable\");","map":{"version":3,"sources":["/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/BookTable.js"],"names":["React","DatePicker","TimePicker","axios","useParams","BookTable","loggedIn","loginData","chosenDate","setChosenDate","useState","chosenTime","setChosenTime","seatingNo","setSeatingNo","existingBookings","setExistingBookings","allBookings","setAllBookings","admin","event","target","value","handleSubmit","user_id","getUsersBookings","response","get","params","then","console","log","data","userId","post","undefined","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAnB,EAA4C;AAAA;;AAC1C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,KAAK,CAACU,QAAN,EAApC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACU,QAAN,EAApC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bd,KAAK,CAACU,QAAN,EAAlC;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0ChB,KAAK,CAACU,QAAN,CAAe,EAAf,CAAhD,CAJ0C,CAI0B;;AACpE,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgClB,KAAK,CAACU,QAAN,CAAe,EAAf,CAAtC,CAL0C,CAKgB;;AAE1D,MAAIJ,QAAJ,EAAc;AACZ,QAAIC,SAAS,CAACY,KAAd,EAAqB;AACnB;AACA,0BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAPD,MAOO;AACP;AACA;AACA;AACA;AACE,0BACE;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,kCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,UAAD;AAAY,cAAA,UAAU,EAAEX,UAAxB;AAAoC,cAAA,aAAa,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,UAAD;AAAY,cAAA,UAAU,EAAEE,UAAxB;AAAoC,cAAA,aAAa,EAAEC;AAAnD;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAYE;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,WAAW,EAAC,OADd;AAEE,cAAA,QAAQ,EAAGQ,KAAD,IAAW;AACnBN,gBAAAA,YAAY,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,eAJH;AAKE,cAAA,KAAK,EAAET;AALT;AAAA;AAAA;AAAA;AAAA,oBAFF,eASE;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAwBE;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAyBE;AACE,YAAA,OAAO,EAAE,MAAM;AACbU,cAAAA,YAAY,CAACf,UAAD,EAAaG,UAAb,EAAyBE,SAAzB,EAAoCN,SAAS,CAACiB,OAA9C,EAAuDf,aAAvD,EAAsEG,aAAtE,EAAqFE,YAArF,CAAZ;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAwCD;AACF,GAtDD,MAsDO;AACL,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF;;GApEQT,S;;KAAAA,S;;AAsET,eAAeoB,gBAAf,CAAgCT,mBAAhC,EAAqDQ,OAArD,EAA8D;AAC5D,QAAME,QAAQ,GAAG,MAAMvB,KAAK,CACzBwB,GADoB,CAEhB,sCAFgB,EAEuB;AACpCC,IAAAA,MAAM,EAAE;AACJJ,MAAAA,OAAO,EAAEA;AADL;AAD4B,GAFvB,EAQpBK,IARoB,CAQfH,QAAQ,IAAI;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAV,IAAAA,mBAAmB,CAACU,QAAQ,CAACM,IAAV,CAAnB;AACH,GAXoB,CAAvB;AAYD;;AAKD,eAAeT,YAAf,CAA4Bf,UAA5B,EAAwCG,UAAxC,EAAoDE,SAApD,EAA+DoB,MAA/D,EAAuExB,aAAvE,EAAsFG,aAAtF,EAAqGE,YAArG,EAAmH;AACjH;AAEA,QAAMY,QAAQ,GAAG,MAAMvB,KAAK,CACzB+B,IADoB,CAEhB,yCAAwCD,MAAO,SAAQzB,UAAW,SAAQG,UAAW,eAAcE,SAAU,EAF7F,EAIpBgB,IAJoB,CAIfH,QAAQ,IAAI;AAChBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EADgB,CAEhB;;AACAjB,IAAAA,aAAa,CAAC,SAAD,CAAb;AACAG,IAAAA,aAAa,CAAC,SAAD,CAAb;AACAE,IAAAA,YAAY,CAACqB,SAAD,CAAZ;AACD,GAVoB,EAWpBC,KAXoB,CAWdC,GAAG,IAAI;AACVP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,GAboB,CAAvB;AAeD;;AAED,eAAehC,SAAf","sourcesContent":["import React from 'react';\nimport DatePicker from './DatePicker';\nimport TimePicker from './TimePicker';\nimport axios from \"axios\";\nimport { useParams } from 'react-router-dom';\n\nfunction BookTable({ loggedIn, loginData }) {\n  const [chosenDate, setChosenDate] = React.useState();\n  const [chosenTime, setChosenTime] = React.useState();\n  const [seatingNo, setSeatingNo] = React.useState();\n  const [existingBookings, setExistingBookings] = React.useState([]); //for user\n  const [allBookings, setAllBookings] = React.useState([]); //for admin\n\n  if (loggedIn) {\n    if (loginData.admin) {\n      //axios request\n      return (\n        <div>\n          <h2>Table Bookings Admin View</h2>\n        </div>\n      )\n    } else {\n    //IF BOOKINGS ALREADY EXIST THEN DISPLAY THEM HERE, USING TERNARY OPERATOR\n    //do the axios call, if found then populate existingBookings \n    //use ternary operator to display bookings by checking if existingBookings is a populated or empty array\n    //getUsersBookings(setExistingBookings, loginData.user_id);\n      return (\n        <div>\n            <h2>Book Table</h2>\n\n            <div class=\"Form\">\n              <div>\n                <p>Select a date:</p>\n                <br />\n                <DatePicker chosenDate={chosenDate} setChosenDate={setChosenDate}/>\n              </div>\n              <br />\n              <div>\n                <p>Select a time:</p>\n                <br />\n                <TimePicker chosenTime={chosenTime} setChosenTime={setChosenTime}/>\n              </div>\n              <br />\n              <div>\n                <p>Enter your seating number:</p>\n                <input \n                  placeholder=\"e.g 5\"\n                  onChange={(event) => {\n                    setSeatingNo(event.target.value);\n                  }}\n                  value={seatingNo}\n                />\n                <br />\n              </div>\n              <br />\n              <button\n                onClick={() => {\n                  handleSubmit(chosenDate, chosenTime, seatingNo, loginData.user_id, setChosenDate, setChosenTime, setSeatingNo);\n                }}\n                >BOOK\n              </button> \n            </div>\n\n\n        </div>\n      );\n    } \n  } else {\n    return (\n      <div>\n        <h3>Please log in to book a table</h3>\n      </div>\n    )\n  }\n}\n\nasync function getUsersBookings(setExistingBookings, user_id) {\n  const response = await axios\n    .get(\n        `http://localhost:3100/user-bookings/`, {\n            params: {\n                user_id: user_id\n            }\n        }\n    )\n    .then(response => {\n        console.log(response)\n        setExistingBookings(response.data);\n    });\n}\n\n\n\n\nasync function handleSubmit(chosenDate, chosenTime, seatingNo, userId, setChosenDate, setChosenTime, setSeatingNo) {\n  //console.log('POST Request', chosenDate, chosenTime, seatingNo, userId);\n\n  const response = await axios\n    .post(\n        `http://localhost:3100/booking?user_id=${userId}&date=${chosenDate}&time=${chosenTime}&seating_no=${seatingNo}`, \n    )\n    .then(response => {\n      console.log(response);\n      //reset form\n      setChosenDate('no date');\n      setChosenTime('no time');\n      setSeatingNo(undefined);\n    })\n    .catch(err => {\n        console.log(err)\n    });\n\n}\n\nexport default BookTable;"]},"metadata":{},"sourceType":"module"}