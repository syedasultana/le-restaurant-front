{"ast":null,"code":"var _jsxFileName = \"/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MenuSection from './MenuSection';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Menu({\n  order,\n  setOrder,\n  loggedIn\n}) {\n  _s();\n\n  const [menuData, setMenuData] = React.useState('');\n  const [courses, setCourses] = React.useState('');\n  const [items, setItems] = React.useState(''); //GET request made to database to retrieve all menu items\n\n  React.useEffect(() => {\n    axios.get(`http://localhost:3100/items`).then(response => {\n      console.log(response);\n      setMenuData(response.data);\n\n      let _courses = response.data.map(x => isolateCourses(x));\n\n      _courses = removeDuplicates(_courses);\n      setCourses(_courses);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [setMenuData]);\n\n  if (menuData !== '') {\n    if (courses.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"heading\",\n          children: \"The Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: courses.map((course, index) => /*#__PURE__*/_jsxDEV(MenuSection, {\n            name: course,\n            items: itemsUnderCourse(course, menuData),\n            order: order,\n            setOrder: setOrder,\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Menu with hardcoded data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuSection, {\n        name: 'Starter',\n        order: order,\n        setOrder: setOrder,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuSection, {\n        name: 'Main',\n        order: order,\n        setOrder: setOrder,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuSection, {\n        name: 'Sides',\n        order: order,\n        setOrder: setOrder,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MenuSection, {\n        name: 'Drinks',\n        order: order,\n        setOrder: setOrder,\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Menu, \"EQNunIc9oetb0cbbh/3k3HWDIHk=\");\n\n_c = Menu;\n\nfunction isolateCourses(datum) {\n  return datum.course;\n}\n\nfunction removeDuplicates(array) {\n  return array.filter((element, index) => array.indexOf(element) === index);\n}\n\nfunction itemsUnderCourse(course, data) {\n  let itemsFound = data.map(datum => itemUnderCourse(datum, course));\n  itemsFound = cleanArray(itemsFound); //remove undefineds from itemsFound\n\n  return itemsFound;\n}\n\nfunction itemUnderCourse(datum, course) {\n  if (datum.course == course) {\n    let foundItem = {\n      name: datum.name,\n      price: datum.price\n    };\n    return foundItem;\n  }\n}\n\nfunction cleanArray(arr) {\n  return arr.filter(element => typeof element === 'object');\n}\n\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/Menu.js"],"names":["React","MenuSection","axios","Menu","order","setOrder","loggedIn","menuData","setMenuData","useState","courses","setCourses","items","setItems","useEffect","get","then","response","console","log","data","_courses","map","x","isolateCourses","removeDuplicates","catch","err","length","course","index","itemsUnderCourse","datum","array","filter","element","indexOf","itemsFound","itemUnderCourse","cleanArray","foundItem","name","price","arr"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MenuSection from './MenuSection';\n\nimport axios from \"axios\";\n\nfunction Menu({ order, setOrder, loggedIn }) {\n  const [menuData, setMenuData] = React.useState('');\n  const [courses, setCourses] = React.useState('');\n  const [items, setItems] = React.useState('');\n\n  //GET request made to database to retrieve all menu items\n  React.useEffect(() => {\n    axios\n      .get(\n          `http://localhost:3100/items`, \n      )\n      .then(response => {\n          console.log(response)\n          setMenuData(response.data);\n          let _courses = response.data.map(x => isolateCourses(x));\n          _courses = removeDuplicates(_courses);\n          setCourses(_courses);\n\n      })\n      .catch(err => {\n          console.log(err)\n      });\n  }, [setMenuData])\n\n  if (menuData !== '') {\n    if (courses.length > 0) {\n      return (\n        <div>\n            <h2 class=\"heading\">The Menu</h2>\n            <div>{courses.map((course, index) => (\n              <MenuSection name={course} items={itemsUnderCourse(course, menuData)} order={order} setOrder={setOrder} loggedIn={loggedIn}/> \n            ))}\n            </div>\n\n        </div>\n      )\n    } else {\n      return (\n        <></>\n      )\n    }\n    \n  } else {\n    return (\n      <div>\n          <h2>Menu with hardcoded data</h2>\n          <MenuSection name={'Starter'} order={order} setOrder={setOrder} loggedIn={loggedIn}/>\n          <MenuSection name={'Main'} order={order} setOrder={setOrder} loggedIn={loggedIn}/>\n          <MenuSection name={'Sides'} order={order} setOrder={setOrder} loggedIn={loggedIn}/>\n          <MenuSection name={'Drinks'} order={order} setOrder={setOrder} loggedIn={loggedIn}/>\n      </div>\n    ); \n  }\n    \n  \n   \n}\n\nfunction isolateCourses(datum) {\n  return datum.course;\n}\n\nfunction removeDuplicates(array) {\n  return array.filter((element, index) => array.indexOf(element) === index);\n}\n\nfunction itemsUnderCourse(course, data) {\n  let itemsFound = data.map(datum => itemUnderCourse(datum, course));\n  itemsFound = cleanArray(itemsFound); //remove undefineds from itemsFound\n  return itemsFound;\n}\n\nfunction itemUnderCourse(datum, course) {\n  if (datum.course == course) {\n    let foundItem = {name: datum.name, price: datum.price};\n    return foundItem;\n  }\n}\n\nfunction cleanArray(arr) {\n  return arr.filter(element => typeof element === 'object');\n}\n\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}