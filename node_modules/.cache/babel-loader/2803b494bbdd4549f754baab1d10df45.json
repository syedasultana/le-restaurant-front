{"ast":null,"code":"var _jsxFileName = \"/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/DatePicker.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DatePicker({\n  chosenDate,\n  setChosenDate\n}) {\n  _s();\n\n  const [alreadyPickedDate, setAlreadyPickedDate] = React.useState(false); //const [btnToggle, setBtnToggle] = React.useState(false);\n\n  const [showModal, setShowModal] = React.useState(false);\n  const [modalMessage, setModalMessage] = React.useState();\n  React.useEffect(() => {\n    console.log('chosenDate', chosenDate);\n    let d = formatDate(chosenDate);\n    console.log(d);\n    setModalMessage('you have selected ' + chosenDate);\n  }, [chosenDate]);\n  React.useEffect(() => {\n    if (alreadyPickedDate) {\n      setShowModal(true);\n    }\n  }, [alreadyPickedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let chosenDate = new Date(2021, 3, 1);\n        setChosenDate(chosenDate);\n        setAlreadyPickedDate(true); //make the button COLOURED\n      },\n      children: \"1st April\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let chosenDate = new Date(2021, 3, 2);\n        setChosenDate(chosenDate);\n        setAlreadyPickedDate(true);\n      },\n      children: \"2nd April\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let chosenDate = new Date(2021, 3, 3);\n        setChosenDate(chosenDate);\n        setAlreadyPickedDate(true);\n      },\n      children: \"3rd April\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      toggle: showModal,\n      message: modalMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DatePicker, \"xJZABdIb3977JP2gecFpPbRJY4Y=\");\n\n_c = DatePicker;\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n}\n\nexport default DatePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DatePicker\");","map":{"version":3,"sources":["/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/DatePicker.js"],"names":["React","Modal","DatePicker","chosenDate","setChosenDate","alreadyPickedDate","setAlreadyPickedDate","useState","showModal","setShowModal","modalMessage","setModalMessage","useEffect","console","log","d","formatDate","Date","date","month","getMonth","day","getDate","year","getFullYear","length","join"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from './Modal';\n\n\nfunction DatePicker({ chosenDate, setChosenDate }) {\n  const [alreadyPickedDate, setAlreadyPickedDate] = React.useState(false);\n  //const [btnToggle, setBtnToggle] = React.useState(false);\n  const [showModal, setShowModal] = React.useState(false);\n  const [modalMessage, setModalMessage] = React.useState();\n\n    React.useEffect(() => {\n        console.log('chosenDate', chosenDate);\n        let d = formatDate(chosenDate);\n        console.log(d);\n        setModalMessage('you have selected ' + chosenDate);\n    }, [chosenDate])\n\n    React.useEffect(() => {\n      if (alreadyPickedDate) {\n        setShowModal(true);\n      }\n    }, [alreadyPickedDate])\n    \n    return (\n        <div>\n            <button\n              onClick={() => {\n                  let chosenDate = new Date(2021, 3, 1);\n                  setChosenDate(chosenDate);\n                  setAlreadyPickedDate(true);//make the button COLOURED\n              }}\n              >1st April\n            </button>\n\n            <button\n              onClick={() => {\n                let chosenDate = new Date(2021, 3, 2);\n                setChosenDate(chosenDate);\n                setAlreadyPickedDate(true);\n              }}\n              >2nd April\n            </button>\n\n            <button\n              onClick={() => {\n                let chosenDate = new Date(2021, 3, 3);\n                setChosenDate(chosenDate);\n                setAlreadyPickedDate(true);\n              }}\n              >3rd April\n            </button>\n\n            <Modal toggle={showModal} message={modalMessage} />\n        </div>\n    ); \n   \n  }\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\n\nexport default DatePicker;"]},"metadata":{},"sourceType":"module"}