{"ast":null,"code":"var _jsxFileName = \"/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/CurrentOrder.js\";\nimport React from 'react';\nimport BasketItem from './BasketItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CurrentOrder({\n  order,\n  setOrder,\n  loggedIn\n}) {\n  //console.log('order', order);\n  //CHECK IF LOGGED IN\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), order.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [order.map((item, index) => /*#__PURE__*/_jsxDEV(BasketItem, {\n        name: order[index].itemName,\n        price: order[index].itemPrice,\n        quantity: order[index].quantity,\n        setOrder: setOrder,\n        index: index,\n        order: order\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"total: \\xA3\", calculateTotal(order)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"ORDER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No items added to order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CurrentOrder;\n\nfunction calculateTotal(orderArray) {\n  const prices = orderArray.map(x => isolatePrices(x));\n  const quantities = orderArray.map(x => isolateQuantities(x));\n  let pXq = multiplyArrays(prices, quantities);\n  let sum = pXq.reduce((a, b) => a + b, 0);\n  return sum.toFixed(2);\n}\n\nfunction isolatePrices(item) {\n  return item.itemPrice;\n}\n\nfunction isolateQuantities(item) {\n  return item.quantity;\n}\n\nfunction multiplyArrays(arr1, arr2) {\n  let arr1Copy = arr1;\n  return arr1.map(x => specialMultiply(x, arr1Copy, arr2));\n}\n\nfunction specialMultiply(x, arr1Copy, arr2) {\n  let index = arr1Copy.indexOf(x);\n  let multiplicant = arr2[index];\n  return x * multiplicant;\n}\n\nexport default CurrentOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentOrder\");","map":{"version":3,"sources":["/Users/syedasultana/Development/restaurants-app/restaurants-front/src/Components/CurrentOrder.js"],"names":["React","BasketItem","CurrentOrder","order","setOrder","loggedIn","length","map","item","index","itemName","itemPrice","quantity","calculateTotal","orderArray","prices","x","isolatePrices","quantities","isolateQuantities","pXq","multiplyArrays","sum","reduce","a","b","toFixed","arr1","arr2","arr1Copy","specialMultiply","indexOf","multiplicant"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAtB,EAAqD;AACnD;AACA;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGKF,KAAK,CAACG,MAAN,GAAe,CAAhB,gBACE;AAAA,iBAAMH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAChB,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEN,KAAK,CAACM,KAAD,CAAL,CAAaC,QAA/B;AAAyC,QAAA,KAAK,EAAEP,KAAK,CAACM,KAAD,CAAL,CAAaE,SAA7D;AAAwE,QAAA,QAAQ,EAAER,KAAK,CAACM,KAAD,CAAL,CAAaG,QAA/F;AAAyG,QAAA,QAAQ,EAAER,QAAnH;AAA6H,QAAA,KAAK,EAAEK,KAApI;AAA2I,QAAA,KAAK,EAAEN;AAAlJ;AAAA;AAAA;AAAA;AAAA,cADM,CAAN,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kCAAaU,cAAc,CAACV,KAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAQE;AAAA,6BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAXN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;KAtBQD,Y;;AAwBT,SAASW,cAAT,CAAwBC,UAAxB,EAAoC;AAClC,QAAMC,MAAM,GAAGD,UAAU,CAACP,GAAX,CAAeS,CAAC,IAAIC,aAAa,CAACD,CAAD,CAAjC,CAAf;AACA,QAAME,UAAU,GAAGJ,UAAU,CAACP,GAAX,CAAeS,CAAC,IAAIG,iBAAiB,CAACH,CAAD,CAArC,CAAnB;AAEA,MAAII,GAAG,GAAGC,cAAc,CAACN,MAAD,EAASG,UAAT,CAAxB;AAEA,MAAII,GAAG,GAAGF,GAAG,CAACG,MAAJ,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAzB,EAA4B,CAA5B,CAAV;AAEA,SAAOH,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAAP;AACD;;AAED,SAAST,aAAT,CAAuBT,IAAvB,EAA6B;AAC3B,SAAOA,IAAI,CAACG,SAAZ;AACD;;AAED,SAASQ,iBAAT,CAA2BX,IAA3B,EAAiC;AAC/B,SAAOA,IAAI,CAACI,QAAZ;AACD;;AAED,SAASS,cAAT,CAAwBM,IAAxB,EAA8BC,IAA9B,EAAoC;AAClC,MAAIC,QAAQ,GAAGF,IAAf;AACA,SAAOA,IAAI,CAACpB,GAAL,CAASS,CAAC,IAAIc,eAAe,CAACd,CAAD,EAAIa,QAAJ,EAAcD,IAAd,CAA7B,CAAP;AACD;;AAED,SAASE,eAAT,CAAyBd,CAAzB,EAA4Ba,QAA5B,EAAsCD,IAAtC,EAA4C;AAC1C,MAAInB,KAAK,GAAGoB,QAAQ,CAACE,OAAT,CAAiBf,CAAjB,CAAZ;AACA,MAAIgB,YAAY,GAAGJ,IAAI,CAACnB,KAAD,CAAvB;AACA,SAAOO,CAAC,GAAGgB,YAAX;AACD;;AAGD,eAAe9B,YAAf","sourcesContent":["import React from 'react';\nimport BasketItem from './BasketItem'\n\nfunction CurrentOrder({ order, setOrder, loggedIn }) {\n  //console.log('order', order);\n  //CHECK IF LOGGED IN\n  return (\n    <div>\n      <h2>Current Order</h2>\n      {\n        (order.length > 0)\n        ? <div>{order.map((item, index) => (\n          <BasketItem name={order[index].itemName} price={order[index].itemPrice} quantity={order[index].quantity} setOrder={setOrder} index={index} order={order}/>\n          ))}\n            <br />\n            <h4>total: Â£{calculateTotal(order)}</h4>\n            <button>ORDER</button>\n          </div>\n        : <div><h3>No items added to order</h3></div>\n\n      }\n    </div>\n  )\n\n  \n}\n\nfunction calculateTotal(orderArray) {\n  const prices = orderArray.map(x => isolatePrices(x));\n  const quantities = orderArray.map(x => isolateQuantities(x));\n\n  let pXq = multiplyArrays(prices, quantities);\n\n  let sum = pXq.reduce((a, b) => a + b, 0)\n  \n  return sum.toFixed(2);\n}\n\nfunction isolatePrices(item) {\n  return item.itemPrice;\n}\n\nfunction isolateQuantities(item) {\n  return item.quantity;\n}\n\nfunction multiplyArrays(arr1, arr2) {\n  let arr1Copy = arr1;\n  return arr1.map(x => specialMultiply(x, arr1Copy, arr2));\n}\n\nfunction specialMultiply(x, arr1Copy, arr2) {\n  let index = arr1Copy.indexOf(x);\n  let multiplicant = arr2[index];\n  return x * multiplicant;\n}\n\n\nexport default CurrentOrder;"]},"metadata":{},"sourceType":"module"}